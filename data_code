// 데이터 로드 및 확인
import pandas as pd

data1 = pd.read_csv('data999.csv')
data1.head()

data1.columns

data1.info()

print(data1['sido_nm'].unique(),'\n')
print(data1['sido_nm'].nunique(), '\n')
print(data1['sido_nm'].value_counts())

data2 = pd.read_csv('raw_data2.csv')
data2.head()

#print(data1.isnull().sum())
#print(data2.isnull().sum())

data1.dropna(axis=0, subset=['loc_info_x', 'loc_info_y', 'time_unit_tmprt', 
                             'time_unit_ws', 'time_unit_humidity'], inplace=True)

data1.isnull().sum()

data2.dropna(axis=0, subset=['loc_info_x', 'loc_info_y', 'time_unit_tmprt', 
                             'time_unit_ws', 'time_unit_humidity'], inplace=True)

data2.isnull().sum()

#data['time_unit_rainqty'].fillna(0, inplace=True)
#data['time_unit_msnf'].fillna(0, inplace=True)
#data['lfdau_nm'].fillna('', inplace=True)
#data.dropna(axis=0, subset=['time_unit_tmprt'], inplace=True)
#data.dropna(axis=0, subset=['time_unit_ws'], inplace=True)
#data.dropna(axis=0, subset=['time_unit_humidity'], inplace=True)
#data.dropna(axis=0, subset=['time_unit_rainqty'], inplace=True)
#data.drop(['time_unit_msnf', 'lfdau_nm'], axis=1, inplace=True)

* time_unit_tmprt(시간단위기온) >> 결측치가 있는건 삭제해야하지 않나

* time_unit_rainqty(시간단위강수량), time_unit_msnf(시간단위적설량) >> 강수량, 적설량 값이 없으면 0으로 대체

* time_unit_ws(시간단위풍속), time_unit_humidity(시간단위습도) >> 애매

* lfdau_nm(소방지역대명) >> 소방지역대명 존재하면 더미값으로 부여

#print(data1['emd_nm'].unique(),'\n')
#print(data1['emd_nm'].nunique(), '\n')
#print(data1['emd_nm'].value_counts())

#print(data.sort_values('spt_arvl_dsp_diff'))

#data1.columns

data1.drop(['resc_reprt_no', 'prcs_result_se_nm', 'sido_nm', 
            'dclr_mm', 'dclr_dd', 'dclr_mi', 'dsp_yr', 'dsp_mm', 
            'dsp_dd', 'dsp_hh', 'dsp_mi', 'spt_arvl_yr', 'spt_arvl_mm', 
            'spt_arvl_dd', 'spt_arvl_hh','spt_arvl_mi','resc_cmptn_ymd', 
            'resc_cmptn_tm', 'resc_cmptn_yr','resc_cmptn_mm', 
            'resc_cmptn_dd', 'resc_cmptn_hh', 'resc_cmptn_mi', 'hmg_ymd', 
            'hmg_tm', 'hmg_yr', 'hmg_mm', 'hmg_dd', 'hmg_hh', 'hmg_mi'], axis=1, inplace=True)
data1.head()

#data2.columns

data2.drop(['msfrtn_resc_reprt_no', 'prcs_result_se_nm', 'sido_nm', 
            'dclr_mnth', 'dclr_day', 'dclr_min', 'dsp_yr', 'dsp_mnth', 
            'dsp_day', 'dsp_hour', 'dsp_min', 'spt_arvl_yr', 'spt_arvl_mnth', 
            'spt_arvl_day', 'spt_arvl_hour','spt_arvl_min','resc_cmptn_ymd', 
            'resc_cmptn_tm','resc_cmptn_yr', 'resc_cmptn_mnth', 'resc_cmptn_day', 
            'resc_cmptn_hour','resc_cmptn_min', 'hmg_ymd', 'hmg_tm', 'hmg_yr', 
            'hmg_mnth', 'hmg_day', 'hmg_hour', 'hmg_min'], axis=1, inplace=True)
data2.head()

data1.rename(columns={'dclr_yr':'year', 'dclr_hh':'hour', 
                      'cty_frmvl_se':'cty_frmvl_se_nm'}, inplace=True)
data2.rename(columns={'dclr_yr':'year', 'dclr_hour':'hour'}, inplace=True)
* emd_nm(읍면동명), cty_frmvl_se(도시농촌구분명), dong_se(읍면동구분명)

=> 상관관계 있을 수 있다고 생각

* resc_reprt_no(재난구조보고서번호)

=> 모든 값이 유니크

* sido_nm(시도명)

=> 모든 값이 '제주특별자치도'로 동일

* loc_info_x(위치정보X), loc_info_y(위치정보y)

=> 좌표값?

* 풍향
